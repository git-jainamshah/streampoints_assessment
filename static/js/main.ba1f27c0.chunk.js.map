{"version":3,"sources":["applogo.svg","AppHeader.js","CardsView.js","HomePage.js","App.js","index.js"],"names":["Header","Layout","AppHeader","className","src","applogo","alt","Component","TabPane","Tabs","callback","key","console","log","CardsView","props","state","visible","onClose","setState","togglePicker","titleColorToogle","document","getElementById","style","visibility","flag","bodyTextColorPickerToggle","bodyColorToogle","panelColorPickerToggle","borderRadiusColorToogle","titleBackground","bodyBackground","panelBackground","handleTitleColor","color","event","hex","background","myCards","map","d","k","currID","setTitleColor","forceUpdate","handleBodyColor","setBodyTextColor","handlePanelColor","setCardBorderColor","id","value","parseInt","setTitle","setBodyText","setTitleSize","setBodyTextSize","setCardBorderRadius","setDeleteable","titleOnChange","bind","descOnChange","titleSizeOnChange","descSizeOnChange","panelRadiusSizeOnChange","this","length","data","resetData","index","copiedData","i","push","splice","rerenderMyPage","target","placement","closable","getContainer","position","padding","boxShadow","overflowY","width","defaultActiveKey","onChange","centered","size","tab","SettingOutlined","fontSize","fontWeight","type","placeholder","onChangeCapture","rows","FormatPainterOutlined","border","min","onChangeComplete","onClick","borderRadius","borderColor","hidden","Meta","title","noshade","description","textAlign","showDrawer","EditTwoTone","twoToneColor","copyButtonHanlder","CopyTwoTone","deleteButtonHanlder","DeleteTwoTone","HomePage","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba1f27c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/applogo.da1a531e.svg\";","import React, { Component } from \"react\";\r\nimport applogo from \"./applogo.svg\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { Header } = Layout;\r\n\r\nclass AppHeader extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Header className=\"header\">\r\n          <div className=\"logo\">\r\n            <img src={applogo} alt=\"Company Logo\" />\r\n          </div>\r\n        </Header>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, { Component, useState, props, useEffect } from \"react\";\r\nimport { Card, Drawer, Tabs } from \"antd\";\r\nimport {\r\n  DeleteTwoTone,\r\n  EditTwoTone,\r\n  CopyTwoTone,\r\n  SettingOutlined,\r\n  FormatPainterOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { BlockPicker } from \"react-color\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\n\r\nclass CardsView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var id = 0;\r\n    this.state = {\r\n      value: \"\",\r\n      myCards: [\r\n        {\r\n          id: parseInt(++id),\r\n          setTitle: \"Custom Title\",\r\n          setBodyText: \"Custom Body Text\",\r\n          setTitleSize: \"36px\",\r\n          setTitleColor: \"#0E2748\",\r\n          setBodyTextSize: \"16px\",\r\n          setBodyTextColor: \"#4F4F4F\",\r\n          setCardBorderRadius: \"16px\",\r\n          setCardBorderColor: \"\",\r\n          setDeleteable: false,\r\n        },\r\n      ],\r\n      currID: 0,\r\n      titleColorToogle: true,\r\n      bodyColorToogle: true,\r\n      borderRadiusColorToogle: true,\r\n    };\r\n    this.titleOnChange = this.titleOnChange.bind(this);\r\n    this.descOnChange = this.descOnChange.bind(this);\r\n    this.titleSizeOnChange = this.titleSizeOnChange.bind(this);\r\n    this.descSizeOnChange = this.descSizeOnChange.bind(this);\r\n    this.panelRadiusSizeOnChange = this.panelRadiusSizeOnChange.bind(this);\r\n    this.togglePicker = this.togglePicker.bind(this);\r\n  }\r\n\r\n  resetData() {\r\n    this.state.myCards.length > 1\r\n      ? this.state.myCards.map((data) => {\r\n          data.setDeleteable = true;\r\n        })\r\n      : this.state.myCards.map((data) => {\r\n          data.setDeleteable = false;\r\n        });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  rerenderMyPage() {\r\n    this.resetData();\r\n  }\r\n\r\n  copyButtonHanlder(index) {\r\n    const copiedData = [];\r\n    this.state.myCards.map((data, i) =>\r\n      i === index\r\n        ? copiedData.push({\r\n            id: parseInt(data.id) + 1,\r\n            setTitle: data.setTitle,\r\n            setBodyText: data.setBodyText,\r\n            setTitleSize: data.setTitleSize,\r\n            setTitleColor: data.setTitleColor,\r\n            setBodyTextSize: data.setBodyTextSize,\r\n            setBodyTextColor: data.setBodyTextColor,\r\n            setCardBorderRadius: data.setCardBorderRadius,\r\n            setCardBorderColor: data.setCardBorderColor,\r\n            setDeleteable: data.setDeleteable,\r\n          })\r\n        : console.log(\"Cannot find the data\")\r\n    );\r\n    this.state.myCards.splice(index, 0, copiedData[0]);\r\n    this.rerenderMyPage();\r\n  }\r\n\r\n  deleteButtonHanlder(index) {\r\n    this.state.myCards.splice(index, 1);\r\n    this.rerenderMyPage();\r\n  }\r\n\r\n  state = { visible: false };\r\n\r\n  showDrawer(i) {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n    this.state.currID = i;\r\n\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (document.getElementById(\"txtTitle\").value = d.setTitle)\r\n        : (document.getElementById(\"txtTitle\").value = \"\");\r\n    });\r\n\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (document.getElementById(\"txtDescription\").value = d.setBodyText)\r\n        : (document.getElementById(\"txtDescription\").value = \"\");\r\n    });\r\n  }\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  titleOnChange(event) {\r\n    console.log(event.target.value);\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (d.setTitle = event.target.value)\r\n        : (d.setTitle = d.setTitle);\r\n\r\n      k === this.state.currID\r\n        ? event.target.value == \"\"\r\n          ? (d.setTitle = \"Custom Title\")\r\n          : (d.setTitle = d.setTitle)\r\n        : console.log(\"\");\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  descOnChange(event) {\r\n    console.log(event.target.value);\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (d.setBodyText = event.target.value)\r\n        : (d.setBodyText = d.setBodyText);\r\n\r\n      k === this.state.currID\r\n        ? event.target.value == \"\"\r\n          ? (d.setBodyText = \"Custom Body Text\")\r\n          : (d.setBodyText = d.setBodyText)\r\n        : console.log(\"\");\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  titleSizeOnChange(event) {\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (d.setTitleSize = event.target.value + \"px\")\r\n        : (d.setTitleSize = d.setTitleSize);\r\n\r\n      k === this.state.currID\r\n        ? event.target.value == \"\" || parseInt(event.target.value) < 0\r\n          ? (d.setTitleSize = \"36px\")\r\n          : (d.setTitleSize = d.setTitleSize)\r\n        : console.log(\"\");\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  descSizeOnChange(event) {\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (d.setBodyTextSize = event.target.value + \"px\")\r\n        : (d.setBodyTextSize = d.setBodyTextSize);\r\n\r\n      k === this.state.currID\r\n        ? event.target.value == \"\" || parseInt(event.target.value) < 0\r\n          ? (d.setBodyTextSize = \"16px\")\r\n          : (d.setBodyTextSize = d.setBodyTextSize)\r\n        : console.log(\"\");\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  panelRadiusSizeOnChange(event) {\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (d.setCardBorderRadius = event.target.value + \"px\")\r\n        : (d.setCardBorderRadius = d.setCardBorderRadius);\r\n\r\n      k === this.state.currID\r\n        ? event.target.value == \"\" || parseInt(event.target.value) < 0\r\n          ? (d.setCardBorderRadius = \"16px\")\r\n          : (d.setCardBorderRadius = d.setCardBorderRadius)\r\n        : console.log(\"\");\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  togglePicker = () => {\r\n    console.log(this.state.titleColorToogle);\r\n    if (this.state.titleColorToogle) {\r\n      document.getElementById(\"titleBlockPicker\").style.visibility = \"visible\";\r\n    } else {\r\n      document.getElementById(\"titleBlockPicker\").style.visibility = \"hidden\";\r\n    }\r\n    var flag = this.state.titleColorToogle;\r\n    this.setState({\r\n      titleColorToogle: !flag,\r\n    });\r\n  };\r\n\r\n  bodyTextColorPickerToggle = () => {\r\n    console.log(this.state.bodyColorToogle);\r\n    if (this.state.bodyColorToogle) {\r\n      document.getElementById(\"bodyTextBlockPicker\").style.visibility =\r\n        \"visible\";\r\n    } else {\r\n      document.getElementById(\"bodyTextBlockPicker\").style.visibility =\r\n        \"hidden\";\r\n    }\r\n    var flag = this.state.bodyColorToogle;\r\n    this.setState({\r\n      bodyColorToogle: !flag,\r\n    });\r\n  };\r\n\r\n  panelColorPickerToggle = () => {\r\n    console.log(this.state.bodyColorToogle);\r\n    if (this.state.bodyColorToogle) {\r\n      document.getElementById(\"panelBlockPicker\").style.visibility = \"visible\";\r\n    } else {\r\n      document.getElementById(\"panelBlockPicker\").style.visibility = \"hidden\";\r\n    }\r\n    var flag = this.state.borderRadiusColorToogle;\r\n    this.setState({\r\n      borderRadiusColorToogle: !flag,\r\n    });\r\n  };\r\n\r\n  state = {\r\n    titleBackground: \"#0e2748\",\r\n    bodyBackground: \"#4F4F4F\",\r\n    panelBackground: \"#FFFFFF\",\r\n  };\r\n\r\n  handleTitleColor = (color, event) => {\r\n    this.setState({ titleBackground: color.hex });\r\n    document.getElementById(\"txtTitleColor\").style.background =\r\n      this.state.titleBackground;\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (d.setTitleColor = this.state.titleBackground)\r\n        : (d.setTitleColor = d.setTitleColor);\r\n    });\r\n    this.forceUpdate();\r\n  };\r\n\r\n  handleBodyColor = (color, event) => {\r\n    this.setState({ bodyBackground: color.hex });\r\n    document.getElementById(\"txtBodyColor\").style.background =\r\n      this.state.bodyBackground;\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (d.setBodyTextColor = this.state.bodyBackground)\r\n        : (d.setBodyTextColor = d.setBodyTextColor);\r\n    });\r\n    this.forceUpdate();\r\n  };\r\n\r\n  handlePanelColor = (color, event) => {\r\n    this.setState({ panelBackground: color.hex });\r\n    document.getElementById(\"txtPanelColor\").style.background =\r\n      this.state.panelBackground;\r\n    this.state.myCards.map((d, k) => {\r\n      k === this.state.currID\r\n        ? (d.setCardBorderColor = this.state.panelBackground)\r\n        : (d.setCardBorderColor = d.setCardBorderColor);\r\n    });\r\n    this.forceUpdate();\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Drawer\r\n            placement=\"right\"\r\n            closable={false}\r\n            onClose={this.onClose}\r\n            visible={this.state.visible}\r\n            getContainer={false}\r\n            style={{\r\n              position: \"absolute\",\r\n              padding: 0,\r\n              boxShadow: \"0px 4px 24px rgba(0, 0, 0, 0.14)\",\r\n              overflowY: \"auto\",\r\n            }}\r\n            width=\"350\"\r\n          >\r\n            <div>\r\n              <Tabs\r\n                defaultActiveKey=\"1\"\r\n                onChange={callback}\r\n                className=\"customTab\"\r\n                centered={true}\r\n                size=\"large\"\r\n                style={{ color: \"#BDBDBD\" }}\r\n              >\r\n                <TabPane\r\n                  tab={\r\n                    <SettingOutlined\r\n                      style={{ fontSize: \"25px\", fontWeight: 800 }}\r\n                    />\r\n                  }\r\n                  key=\"1\"\r\n                  className=\"tab\"\r\n                >\r\n                  <form>\r\n                    <div>\r\n                      <h3 className=\"headTitle\">Title Text</h3>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"txtTitle\"\r\n                        placeholder=\"Enter Custom Title\"\r\n                        className=\"inputElement\"\r\n                        onChangeCapture={this.titleOnChange}\r\n                      />\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                      <h3 className=\"headTitle\">Body Text</h3>\r\n                      <textarea\r\n                        type=\"text\"\r\n                        id=\"txtDescription\"\r\n                        placeholder=\"Enter Custom Text\"\r\n                        className=\"inputElement\"\r\n                        rows=\"5\"\r\n                        onChangeCapture={this.descOnChange}\r\n                      ></textarea>\r\n                    </div>\r\n                  </form>\r\n                </TabPane>\r\n                <TabPane\r\n                  tab={\r\n                    <FormatPainterOutlined\r\n                      style={{ fontSize: \"25px\", fontWeight: 800 }}\r\n                    />\r\n                  }\r\n                  key=\"2\"\r\n                  style={{ color: \"unset\", fontSize: \"unset\" }}\r\n                >\r\n                  <form>\r\n                    <div id=\"titleTools\" style={{ padding: \"10px\" }}>\r\n                      <p\r\n                        style={{\r\n                          color: \"#00A3FF\",\r\n                          fontWeight: 500,\r\n                          fontSize: \"18px\",\r\n                        }}\r\n                      >\r\n                        Title\r\n                      </p>\r\n                      <table\r\n                        style={{ border: \"0px solid black\", width: \"70%\" }}\r\n                      >\r\n                        <tr>\r\n                          <td>\r\n                            <p className=\"greyHeading\">Size</p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"greyHeading\">Color</p>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <input\r\n                              type=\"number\"\r\n                              placeholder=\"px\"\r\n                              className=\"inputElement\"\r\n                              style={{ width: \"100px\", padding: \"5px\" }}\r\n                              id=\"txtTitleSize\"\r\n                              onChangeCapture={this.titleSizeOnChange}\r\n                              min=\"0\"\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <div\r\n                              id=\"titleBlockPicker\"\r\n                              className=\"titleBlockPicker\"\r\n                            >\r\n                              <BlockPicker\r\n                                color={this.state.background}\r\n                                onChangeComplete={this.handleTitleColor}\r\n                              />\r\n                            </div>\r\n                            <div\r\n                              id=\"txtTitleColor\"\r\n                              className=\"blockColor-title\"\r\n                              onClick={this.togglePicker}\r\n                            ></div>\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                    <hr size=\"1\" style={{ background: \"#e0e0e0\" }}></hr>\r\n\r\n                    <div id=\"bodyTools\" style={{ padding: \"10px\" }}>\r\n                      <p\r\n                        style={{\r\n                          color: \"#00A3FF\",\r\n                          fontWeight: 500,\r\n                          fontSize: \"18px\",\r\n                        }}\r\n                      >\r\n                        Body\r\n                      </p>\r\n                      <table\r\n                        style={{ border: \"0px solid black\", width: \"70%\" }}\r\n                      >\r\n                        <tr>\r\n                          <td>\r\n                            <p className=\"greyHeading\">Size</p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"greyHeading\">Color</p>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <input\r\n                              type=\"number\"\r\n                              placeholder=\"px\"\r\n                              className=\"inputElement\"\r\n                              style={{ width: \"100px\", padding: \"5px\" }}\r\n                              id=\"txtBodySize\"\r\n                              onChangeCapture={this.descSizeOnChange}\r\n                              min=\"0\"\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <div\r\n                              id=\"bodyTextBlockPicker\"\r\n                              className=\"bodyTextBlockPicker\"\r\n                            >\r\n                              <BlockPicker\r\n                                color={this.state.background}\r\n                                onChangeComplete={this.handleBodyColor}\r\n                              />\r\n                            </div>\r\n                            <div\r\n                              id=\"txtBodyColor\"\r\n                              className=\"blockColor-body\"\r\n                              onClick={this.bodyTextColorPickerToggle}\r\n                            ></div>\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                    <hr size=\"1\" style={{ background: \"#e0e0e0\" }}></hr>\r\n\r\n                    <div id=\"cardsTools\" style={{ padding: \"10px\" }}>\r\n                      <p\r\n                        style={{\r\n                          color: \"#00A3FF\",\r\n                          fontWeight: 500,\r\n                          fontSize: \"18px\",\r\n                        }}\r\n                      >\r\n                        Panel\r\n                      </p>\r\n                      <table\r\n                        style={{ border: \"0px solid black\", width: \"70%\" }}\r\n                      >\r\n                        <tr>\r\n                          <td>\r\n                            <p className=\"greyHeading\">Corner Radius</p>\r\n                          </td>\r\n                          <td>\r\n                            <p className=\"greyHeading\">Color</p>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <input\r\n                              type=\"number\"\r\n                              placeholder=\"px\"\r\n                              className=\"inputElement\"\r\n                              style={{ width: \"100px\", padding: \"5px\" }}\r\n                              id=\"txtPanelSize\"\r\n                              min=\"0\"\r\n                              onChangeCapture={this.panelRadiusSizeOnChange}\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <div\r\n                              id=\"panelBlockPicker\"\r\n                              className=\"panelBlockPicker\"\r\n                            >\r\n                              <BlockPicker\r\n                                color={this.state.background}\r\n                                onChangeComplete={this.handlePanelColor}\r\n                              />\r\n                            </div>\r\n                            <div\r\n                              id=\"txtPanelColor\"\r\n                              className=\"blockColor-borderRadius\"\r\n                              onClick={this.panelColorPickerToggle}\r\n                            ></div>\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                  </form>\r\n                </TabPane>\r\n              </Tabs>\r\n            </div>\r\n          </Drawer>\r\n          {this.state.myCards.map((data, index) => (\r\n            <div className=\"cardHolder\" key={this.state.index}>\r\n              <Card\r\n                className=\"card\"\r\n                id=\"myCard\"\r\n                style={{\r\n                  borderRadius: data.setCardBorderRadius,\r\n                  borderColor: data.setCardBorderColor,\r\n                }}\r\n              >\r\n                <p hidden id=\"cardId\">\r\n                  {data.id}\r\n                </p>\r\n                <Card.Meta\r\n                  title={data.setTitle}\r\n                  className=\"my-title\"\r\n                  style={{\r\n                    padding: \"10px 0px 10px 0px\",\r\n                    fontSize: data.setTitleSize,\r\n                    color: data.setTitleColor,\r\n                    fontWeight: 500,\r\n                  }}\r\n                  id=\"cardTitle\"\r\n                />\r\n                <hr\r\n                  size=\"1\"\r\n                  style={{\r\n                    background: \"#E0E0E0\",\r\n                  }}\r\n                  noshade={true}\r\n                />\r\n                <Card.Meta\r\n                  description={data.setBodyText}\r\n                  className=\"my-description\"\r\n                  style={{\r\n                    padding: \"10px 0px 10px 0px\",\r\n                    fontSize: data.setBodyTextSize,\r\n                    color: data.setBodyTextColor,\r\n                    fontWeight: \"normal\",\r\n                    textAlign: \"justify\",\r\n                  }}\r\n                  id=\"cardData\"\r\n                />\r\n                <div className=\"toolKit\">\r\n                  <div\r\n                    className=\"toolKit-icon-deleteable\"\r\n                    onClick={() => this.showDrawer(index)}\r\n                  >\r\n                    <EditTwoTone twoToneColor=\"#00A3FF\" />\r\n                  </div>\r\n                  <div\r\n                    className=\"toolKit-icon-deleteable\"\r\n                    onClick={() => this.copyButtonHanlder(index)}\r\n                  >\r\n                    <CopyTwoTone twoToneColor=\"#00A3FF\" />\r\n                  </div>\r\n\r\n                  {data.setDeleteable === true ? (\r\n                    <div\r\n                      className=\"toolKit-icon-deleteable\"\r\n                      onClick={() => this.deleteButtonHanlder(index)}\r\n                    >\r\n                      <DeleteTwoTone twoToneColor=\"#00A3FF\" />\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"toolKit-icon-non-deleteable\">\r\n                      <DeleteTwoTone twoToneColor=\"#73706f\" />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n          {this.resetData}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default CardsView;\r\n","import React, { Component } from \"react\";\r\nimport AppHeader from \"./AppHeader\";\r\nimport CardsView from \"./CardsView\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <AppHeader />\r\n        </div>\r\n        <div style={{ padding: \"10px\" }}>\r\n          <CardsView />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import \"./App.css\";\nimport HomePage from \"./HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}